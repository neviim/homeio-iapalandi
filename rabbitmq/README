Essas configurações vão permitir o balanceamento dos nossos nós, 
checando, em um intervalo de 5 segundos, se estão online ou não. 
Roundrobin é um algoritmo simples de escalonamento que equilibra 
a carga local e distribui entre os nós do cluster. Nossos nós 
estarão sendo ouvidos e checados pela porta 5672, que é a porta 
padrão de comunicação TCP do RabbitMQ.


### build da imagem do HAProxy
    $ docker build -t haproxy:2.5 .
    $ docker build -t haproxy:1.6 .

    $ docker image rm a76bc680f807 -f

    $ chmod +x start_all.sh
    $ ./start_all.sh

    $ docker ps


### Monitoramento no RabbitMQ

    - Digitar: localhost:8080
      Use: admin
      Pwd: pwdadmin

      * Uma outra maneira de ficarmos de olho 
        nos Rabbit’s é utilizar o painel do 
      
    - HAProxy: localhost:20000
      Use: guest
      Pwd: guest

### Verificando como RabbitMQ se comporta ao cair um de seus Nos.
    Vamos parar um dos nós e verificar como o RabbitMQ vai se comportar. 
    Indo para o terminal: 
    
    $ docker stop rabbitmq1.

    # Entrar no rabbitmq2 porta 8081

        - Digitar: localhost:8081


Referencias:

    # Clusterizando RabbitMQ com Docker Compose
    https://imasters.com.br/devsecops/clusterizando-rabbitmq-com-docker-compose

    # haproxy verção upgrade
    http://www.haproxy.org/





# groupadd --system ${HAPROXY_USER} && \
# useradd --system --gid ${HAPROXY_USER} ${HAPROXY_USER} && \